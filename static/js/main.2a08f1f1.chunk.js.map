{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","htmlFor","type","placeholder","onChange","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a08f1f1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types'\n\nconst Formulario = ({crearCita}) => {\n  //crear state de citas\n  const [cita, actualizarCita] = useState({\n    mascota: \"\",\n    propietario: \"\",\n    fecha: \"\",\n    hora: \"\",\n    sintomas: \"\",\n  });\n\n  const [error, actualizarError] = useState(false)\n\n  //funcion que se ejecuta cuando el usuario escribe en un input\n\n  const actualizarState = (e) => {\n    actualizarCita({\n      ...cita,\n      [e.target.name]: e.target.value,\n    });\n  };\n  //extraer los valores\n  const { mascota, propietario, fecha, hora, sintomas } = cita;\n\n  //cuando el usuario presiona agregar cita\n  const submitCita = (e) => {\n    e.preventDefault();\n\n    //validar\n    if (\n      mascota.trim() === \"\" ||\n      propietario.trim() === \"\" ||\n      fecha.trim() === \"\" ||\n      hora.trim() === \"\" ||\n      sintomas.trim() === \"\"\n    ) {\n        actualizarError(true)\n      return;\n    }\n    //eliminar el mensaje previo\n    actualizarError(false)\n\n    //asignar un ID\n    cita.id= uuidv4();\n\n    //crear la cita\n    crearCita(cita)\n\n    //reiniciar el form\n    actualizarCita({\n        mascota: \"\",\n        propietario: \"\",\n        fecha: \"\",\n        hora: \"\",\n        sintomas: \"\",\n    })\n\n  };\n\n  return (\n    <>\n      <h2>Crear cita</h2>\n      {error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null}\n      <form onSubmit={submitCita}>\n        <label htmlFor=\"\">Nombre Mascota</label>\n        <input\n          type=\"text\"\n          name=\"mascota\"\n          className=\"u-full-width\"\n          placeholder=\"Nombre mascota\"\n          onChange={actualizarState}\n          value={mascota}\n        />\n        <label htmlFor=\"\">Nombre Dueño</label>\n        <input\n          type=\"text\"\n          name=\"propietario\"\n          className=\"u-full-width\"\n          placeholder=\"Nombre dueño mascota\"\n          onChange={actualizarState}\n          value={propietario}\n        />\n        <label htmlFor=\"\">Fecha</label>\n        <input\n          type=\"date\"\n          name=\"fecha\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={fecha}\n        />\n        <label htmlFor=\"\">Hora</label>\n        <input\n          type=\"time\"\n          name=\"hora\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={hora}\n        />\n        <label htmlFor=\"\">Síntomas</label>\n        <textarea\n          className=\"u-full-width\"\n          name=\"sintomas\"\n          onChange={actualizarState}\n          value={sintomas}\n        ></textarea>\n        <button type=\"submit\" className=\"u-full-width button-primary\">\n          Agregar cita\n        </button>\n      </form>\n    </>\n  );\n};\n\nFormulario.propTypes = {\n    crearCita: PropTypes.func.isRequired\n}\n\nexport default Formulario;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Cita = ({ cita, eliminarCita }) => (\n  <>\n    <div className=\"cita\">\n      <p>\n        Mascota: <span>{cita.mascota}</span>\n      </p>\n      <p>\n        Mascota: <span>{cita.propietario}</span>\n      </p>\n      <p>\n        Mascota: <span>{cita.fecha}</span>\n      </p>\n      <p>\n        Mascota: <span>{cita.hora}</span>\n      </p>\n      <p>\n        Mascota: <span>{cita.sintomas}</span>\n      </p>\n    </div>\n    <button\n      className=\"button eliminar u-full-width\"\n      onClick={() => eliminarCita(cita.id)}\n    >\n      Eliminar &times;\n    </button>\n  </>\n);\n\nCita.propTypes = {\n    cita: PropTypes.object.isRequired,\n    eliminarCita: PropTypes.func.isRequired\n}\n\nexport default Cita;\n","import React, { useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Cita from \"./components/Cita\";\n\nfunction App() {\n  //citas en localstorage\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  //array de citas\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  //useeffect para realizar ciertas operaciones cuando el state cambia\n  //useeffect solo se ejecutará cuando cambie el state de citas\n  useEffect(() => {\n    let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas]);\n\n  //funcion que tome las citas actuales y agregue la nueva\n  const crearCita = (cita) => {\n    guardarCitas([...citas, cita]);\n  };\n\n  //funcion que elimina una cita por su id\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n\n  //mensaje condicional\n  const titulo = citas.length === 0 ? \"No hay citas\" : \"Administra tus citas\";\n\n  return (\n    <>\n      <h1>Administrador de Pacientes</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario crearCita={crearCita} />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map((cita) => (\n              <Cita cita={cita} key={cita.id} eliminarCita={eliminarCita} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}